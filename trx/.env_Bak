# environment of the wallet-service
# Set to production when deploying to production server to turn off testing 
NODE_ENV=production
# server port
PORT=8007
# start the batch job as a separate process from the server
SEPARATE_JOB=N

# use one wallet or generate multiple wallets to watch for incoming deposits
USES_BIND_WALLET_D=N
# use one wallet or generate multiple wallets to send out funds for withdrawals
USES_BIND_WALLET_WD=Y

# a comma-delimited list of the blockchains
# that are supported by the engine
# options: BTC(Bitcoin), ETH (Ethereum), AMT (Ambertime), TRX (Tron)
CHAIN_SUPPORT=TRX

# Batch-job intervals (in seconds)
DEPOSIT_INTERVAL=3
COLLECTION_INTERVAL=30
WITHDRAW_INTERVAL=20
TRANSACTION_INTERVAL=15
RESEND_INTERVAL=60
GAS_INTERVAL=90
CURRENCY_INTERVAL=3600
COIN_PRICE_INTERVAL=30

# turn on batch jobs
RUN_DEPOSIT_JOB=Y  
RUN_WITHDRAW_JOB=Y 
RUN_COIN_JOB=N
RUN_GAS_JOB=N
RUN_CURRENCY_JOB=N

# number of hours included when computing the average coin rate
# setting this to 0 will update using the current rate
COIN_HOUR_AVERAGE=1
# number of minutes in between updates of coin prices
COIN_UPDATE_INTERVAL=60

# URL for retrieval of currency rates
CURRENCY_API_URL=

# URLS for retrival of price
AMTC_PRICE_URL=
ETH_PRICE_URL=
BTC_PRICE_URL=

# turn on resending of coins if the transaction has failed on the blockchain
RESEND_TRANSACTION=Y
# max number of times a transaction can be re-sent
# setting it to zero will disable resending of transactions
RESEND_LIMIT=0
RESEND_THRESHOLD_AMTC=100
RESEND_THRESHOLD_ETH=0.01
RESEND_THRESHOLD_AMT=0.5

# send the transaction to the client on all errors 
SEND_ON_ALL_ERROR=Y

# check for a response to mark it as sent
SEND_CHECKING_ENABLED=Y
# expected response from http sending (default OK)
SEND_CHECKING_EXPECTED={"code":0,"msg":"成功","data":null}

# Callback url for successful transactions (can send to multiple urls by putting a comma-delimited list as the value)
SUCCESS_DEPOSIT_URL=
SUCCESS_WITHDRAW_URL=
SUCCESS_SEND_URL=
REJECT_WITHDRAW_URL=

# Export address url (called after an address is generated)
# Array of Object [{ url: string, type: string }]
ADDRESS_EXPORT_URL=

# flag for multiple coins being supported. 
# used for signing completed transactions sent
# to the server.
MULTIPLE_COIN=N

# Check all incoming calls for signature
SIGNATURE_CHECK=Y
# Number of seconds a timestamp's age can be on a signature
# Set to 0 to skip timestamp checking on signature
SIGNATURE_TIME_CHECK=30

# Automate transfer of deposits into the cold wallet
MANUAL_DEPOSIT=N

# default currency for rate retrieval
DEFAULT_CURRENCY=USD

# Send from timestamp limit (in minutes); default is 2 minutes
SEND_FROM_TIME_LIMIT=2

# Encryption algorithm to user (default is aes-128-cbc-hmac-sha1)
ENCRYPTION_ALGORITHM=aes-256-cbc

# MAIL_SERVICE and MAIL_HOST are exclusive!
# MAIL_SERVICE will have priority over MAIL_HOST
MAIL_SERVICE=
MAIL_HOST=smtp-relay.sendinblue.com
MAIL_USER=danie@liannetsys.com
MAIL_PASS=aAZQMHScYz5EsDwT
#email/s where all emails will be sent to (can be a list of emails separated by ',')
ADDRESS_MAIL_SEND=dibicoin@gmail.com
# turn on email notification if hot wallet balance is too low
WITHDRAW_BALANCE_NOTIF=
#email/s where withdraw emails will be sent to (can be a list of emails separated by ',')
WITHDRAW_MAIL_SEND=
# multiple withdrawals for AMTC/BTC will be performed in one transaction to speed up completion of withdraw transactions
MULTI_WITHDRAW=Y

# file template where address copies will be stored in
# putting ${type} will separate addresses into different text files depending on
# their type
ADDRESS_LOG_FILE=resources/address.txt
#-----------------------------------------------------------------------------------
# TRON blockchain variables
# Testnet: https://api.shasta.trongrid.io
# Mainnet: https://api.trongrid.io
TRX_TRONGRID_API_URL=https://api.trongrid.io
# Testnet: https://shastapi.tronscan.org/api
# Mainnet: https://apilist.tronscan.org/api
TRX_TRONSCAN_API_URL=https://apilist.tronscan.org/api
# number of seconds before timing out a processing block
TRX_SCAN_TIMEOUT=600
TRX_BLOCK_TIMEOUT=600

TRX_CONFIRMATION_COUNT=36
TRX_ENERGY_REQUIREMENT=25000
TRX_BANDWIDTH_REQUIREMENT=350
TRX_QUEUE_SIZE=4

# Burn TRX for energy
TRX_BURN_ENERGY=Y
TRX_BURN_BANDWIDTH=Y

# Minimum number of coins needed to transfer
TRX_COIN_TRANSFER_MIN=0

TRX_COLD_WALLET=
TRX_HOT_WALLET=
TRX_HOT_WALLET_SECRET=

# Contract details
TRX_CONTRACT_ADDRESS=TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t
TRX_CONTRACT_SYMBOL=XXXX
TRX_CONTRACT_DECIMAL=6
# Flag to use contract symbol when returning TRC20 data (addresses and transactions)
TRX_USE_CONTRACT_SYMBOL=Y

TRX_PENDING_WAIT=3600
